{% set name = "onnxruntime" %}
{% set version = "1.15.1" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - git_url: https://github.com/microsoft/onnxruntime
    git_rev: v{{ version }}
    patches:
      - 0001-Fix-for-tests-failures-with-cuda-build-type.patch       #[build_type=='cuda']
      - 0001-Fix-for-NVCC-error.patch                                #[build_type=='cuda']
      - 0001-Updated-protobuf-to-3.21.patch
      - 0001-Fix-shared-lib-re2-not-found.patch
      - 0001-Fix-cuda-11.2-builds.patch

build:
  number: 2
  string: h{{ PKG_HASH }}_{{ build_type }}_py{{ python | replace(".", "") }}_pb{{ protobuf | replace(".*", "")}}_{{ PKG_BUILDNUM }}   #[build_type == 'cpu']
  string: h{{ PKG_HASH }}_{{ build_type }}{{ cudatoolkit | replace(".*", "") }}_py{{ python | replace(".", "") }}_pb{{ protobuf | replace(".*", "")}}_{{ PKG_BUILDNUM }} #[build_type == 'cuda']
  script_env:
    - CUDA_HOME      #[build_type == 'cuda']

requirements:
  build:
    - {{ compiler('c') }}     # [ppc_arch != "p10"]
    - {{ compiler('cxx') }}   # [ppc_arch != "p10"]
    - cmake 3.26
    - libprotobuf {{ libprotobuf }}
    - boost_mp11 {{ boost_mp11 }}
    - gmock {{ gmock }}
    - gtest {{ gmock }}
    - optional-lite {{ optional_lite }}
    - nlohmann_json {{ nlohmann_json }}
    - safeint {{ safeint }}
    - libdate {{ libdate }}
    {% if build_type == 'cuda' %}
    - cudatoolkit {{ cudatoolkit }}
    - cudnn {{ cudnn }}
    {% endif %}

  host:
    - python {{ python }}
    - pip
    - wheel
    - flake8
    - flatbuffers {{ flatbuffers }}
    - python-flatbuffers {{ flatbuffers }}
    - coloredlogs
    - packaging
    - sympy
    - re2
    - nsync
    - libprotobuf {{ libprotobuf }}
    - protobuf {{ protobuf }}
    # We need to statically link protobuf until we link against a system libonnx
    # See: https://github.com/conda-forge/onnxruntime-feedstock/issues/5
    - libprotobuf-static {{ libprotobuf }}
    - numpy {{ numpy }}
    - pybind11
    - ninja {{ ninja }}

  run:
    - python {{ python }}
    - numpy {{ numpy }}
    - protobuf {{ protobuf }}
    - python-flatbuffers {{ flatbuffers }}
    - coloredlogs
    - packaging
    - sympy
    {% if build_type == 'cuda' %}
    - cudatoolkit {{ cudatoolkit }}
    - cudnn {{ cudnn }}
    {% endif %}

test:
  imports:
    - onnxruntime
  commands:
    - pip check
  requires:
    - pip

about:
  home: http://onnxruntime.ai/
  summary: cross-platform, high performance ML inferencing and training accelerator
  license: MIT
  license_file:
    - LICENSE
    - cmake/external/onnx/LICENSE
  description: |
    ONNX Runtime is a cross-platform inference and training machine-learning accelerator.
  dev_url: https://github.com/microsoft/onnxruntime/
  doc_url: https://github.com/microsoft/onnxruntime/tree/master/docs

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
